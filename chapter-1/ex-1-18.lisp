(define (fast-mult a b)
  (cond ((= a 0) 0)
	((= b 0) 0)
	(else (fast-mult-iter a b 0))))
(define (fast-mult-iter a b acc)
  (cond ((= b 0) acc)
	((even? b) (fast-mult-iter (double a) (halve b) acc))
	(else (fast-mult-iter a (- b 1) (+ acc a)))))
(define (double a) (+ a a))
(define (halve a) (/ a 2))
